// <auto-generated />
using System;
using Futterbock.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Futterbock.Migrations
{
    [DbContext(typeof(FutterbockContext))]
    [Migration("20220508194820_Db")]
    partial class Db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("Futterbock.Model.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Description")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Unit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Futterbock.Model.Ingredients_CategoryInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("Ingredients_CategoryInfo");
                });

            modelBuilder.Entity("Futterbock.Model.MealCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MealCategories");
                });

            modelBuilder.Entity("Futterbock.Model.Recipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Futterbock.Model.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EndmealId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StartmealId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EndmealId");

                    b.HasIndex("StartmealId");

                    b.ToTable("Tour");
                });

            modelBuilder.Entity("Futterbock.Model.TourRecipes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TourId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeID");

                    b.HasIndex("TourId");

                    b.ToTable("TourRecipes");
                });

            modelBuilder.Entity("Futterbock.Model.Ingredients_CategoryInfo", b =>
                {
                    b.HasOne("Futterbock.Model.Ingredients", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Futterbock.Model.Tour", b =>
                {
                    b.HasOne("Futterbock.Model.MealCategory", "Endmeal")
                        .WithMany()
                        .HasForeignKey("EndmealId");

                    b.HasOne("Futterbock.Model.MealCategory", "Startmeal")
                        .WithMany()
                        .HasForeignKey("StartmealId");

                    b.Navigation("Endmeal");

                    b.Navigation("Startmeal");
                });

            modelBuilder.Entity("Futterbock.Model.TourRecipes", b =>
                {
                    b.HasOne("Futterbock.Model.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeID");

                    b.HasOne("Futterbock.Model.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId");

                    b.Navigation("Recipe");

                    b.Navigation("Tour");
                });
#pragma warning restore 612, 618
        }
    }
}
